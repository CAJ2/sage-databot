# Generated by ariadne-codegen
# Source: src/graphql/queries

from typing import Any, Dict

from .add_variant import AddVariant
from .base_client import BaseClient
from .get_root_category import GetRootCategory
from .input_types import CreateVariantInput


def gql(q: str) -> str:
    return q


class Client(BaseClient):
    def get_root_category(self, **kwargs: Any) -> GetRootCategory:
        query = gql(
            """
            query GetRootCategory {
              rootCategory {
                id
              }
            }
            """
        )
        variables: Dict[str, object] = {}
        response = self.execute(
            query=query, operation_name="GetRootCategory", variables=variables, **kwargs
        )
        data = self.get_data(response)
        return GetRootCategory.model_validate(data)

    def add_variant(self, input: CreateVariantInput, **kwargs: Any) -> AddVariant:
        query = gql(
            """
            mutation AddVariant($input: CreateVariantInput!) {
              createVariant(input: $input) {
                variant {
                  id
                  name
                  desc
                  created_at
                  updated_at
                }
              }
            }
            """
        )
        variables: Dict[str, object] = {"input": input}
        response = self.execute(
            query=query, operation_name="AddVariant", variables=variables, **kwargs
        )
        data = self.get_data(response)
        return AddVariant.model_validate(data)
