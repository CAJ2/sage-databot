# Generated by ariadne-codegen
# Source: src/graphql/queries

from typing import Any, List, Optional

from pydantic import Field

from .base_model import BaseModel


class GetVariant(BaseModel):
    variants: "GetVariantVariants"


class GetVariantVariants(BaseModel):
    edges: Optional[List["GetVariantVariantsEdges"]]
    page_info: "GetVariantVariantsPageInfo" = Field(alias="pageInfo")


class GetVariantVariantsEdges(BaseModel):
    node: "GetVariantVariantsEdgesNode"


class GetVariantVariantsEdgesNode(BaseModel):
    id: str
    name: Optional[str]
    desc: Optional[str]
    created_at: Any
    updated_at: Any


class GetVariantVariantsPageInfo(BaseModel):
    has_next_page: bool = Field(alias="hasNextPage")
    end_cursor: Optional[str] = Field(alias="endCursor")


GetVariant.model_rebuild()
GetVariantVariants.model_rebuild()
GetVariantVariantsEdges.model_rebuild()
